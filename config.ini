# AZURE STORAGE ACCOUNT INFORMATION 
AZURE_STORAGE_ACCOUNT=<STORAGE ACCOUNT NAME>
AZURE_STORAGE_KEY=<STORAGE ACCOUNT KEY>
image_container_name=activelearningimages
label_container_name=activelearninglabels
# IMAGE INFORMATION
user_folders=True
classes=knots,defect
# Provide preferred distribution of images-review ratio.
# Last value corresponds to images were no object were detected.
# In the example below: 60% of images that use will be reviewing have at least one  bbox with objct class1 (knot),
#   30%  images that have  bboxes for class  (defects)
#   and 10% of images get class "NULL" -- were neither knots nor defects were detected by the model
ideal_class_balance=0.6,0.3,0.1
filetype=*.png
# TAGGING MACHINE 
tagging_location=C:\Users\t-yapand\Desktop\NewTag
pick_max=False
max_tags_per_pixel=2
#
# CUSTOM VISION
# Uncomment lines below if using Azure Custom Vision Service
# training_key=<CUSTOM VISION TRAINING KEY>
# prediction_key=<CUSTOM VISION PREDICTION KEY>
# project_id=<CUSTOM VISION PROJECT ID>
#
# TRAINING MACHINE
# Locations
python_file_directory=/home/yashpande/active-learning-detect/train
data_dir=/home/yashpande/data
train_dir=/home/yashpande/data/training
inference_output_dir=knots_inference_graphs
tf_models_location=/home/yashpande/models/research
download_location=/home/yashpande/downloads
# Training 
train_iterations=200
eval_iterations=10
min_confidence=.5
test_percentage=.2
model_name=faster_rcnn_resnet50_coco_2018_01_28
optional_pipeline_url=https://raw.githubusercontent.com/tensorflow/models/master/research/object_detection/samples/configs/faster_rcnn_resnet50_pets.config
#Init Predictions
init_model_name=faster_rcnn_resnet101_coco_2018_01_28
# Config File Details
old_label_path=PATH_TO_BE_CONFIGURED/pet_label_map.pbtxt
old_train_path=PATH_TO_BE_CONFIGURED/pet_faces_train.record-?????-of-00010
old_val_path=PATH_TO_BE_CONFIGURED/pet_faces_val.record-?????-of-00010
old_checkpoint_path=PATH_TO_BE_CONFIGURED/model.ckpt
num_examples_marker=num_examples:
num_steps_marker=num_steps:
num_classes_marker=num_classes: 
# Calculated
num_classes="$(awk -F ',' '{print NF}' <<< ${classes})"
image_dir=${data_dir}/AllImages
untagged_output=${data_dir}/untagged.csv
tagged_output=${data_dir}/tagged.csv
tagged_predictions=${data_dir}/tagged_preds.csv
test_output=${data_dir}/test.csv
validation_output=${data_dir}/val.csv
tf_location=${tf_models_location}/object_detection
tf_location_legacy=${tf_models_location}/object_detection/legacy
PYTHONPATH=$PYTHONPATH:${tf_models_location}:${tf_models_location}/slim/
label_map_path=${data_dir}/pascal_label_map.pbtxt
tf_record_location=${data_dir}/stamps.record
tf_train_record=${tf_record_location%.*}_train.${tf_record_location##*.}
tf_val_record=${tf_record_location%.*}_val.${tf_record_location##*.}
tf_url=http://download.tensorflow.org/models/object_detection/${model_name}.tar.gz
pipeline_file=${download_location}/${model_name}/pipeline.config
fine_tune_checkpoint=${download_location}/${model_name}/model.ckpt
init_pred_tf_url=http://download.tensorflow.org/models/object_detection/${init_model_name}.tar.gz
init_model_graph=${download_location}/${init_model_name}/frozen_inference_graph.pb
